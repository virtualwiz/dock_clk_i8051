C51 COMPILER V9.54   12864A_3                                                              04/22/2017 09:50:01 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE 12864A_3
OBJECT MODULE PLACED IN 12864A-3.OBJ
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE 12864A-3.c OPTIMIZE(8,SIZE) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <reg51.h>
   2          #include <intrins.h>
   3          #include <string.h>
   4          
   5          #define delayNOP(); {_nop_();_nop_();_nop_();_nop_();};
   6          #define uchar unsigned char
   7          #define uint  unsigned int
   8          #define LCD_data  P0 
   9          
  10          #define AM(X) X
  11          #define PM(X) (X+12) 
  12          #define DS1302_SECOND 0x80
  13          #define DS1302_MINUTE 0x82
  14          #define DS1302_HOUR   0x84 
  15          #define DS1302_WEEK   0x8A
  16          #define DS1302_DAY    0x86
  17          #define DS1302_MONTH  0x88
  18          #define DS1302_YEAR   0x8C
  19          #define DS1302_RAM(X) (0xC0+(X)*2)    //用于计算 DS1302_RAM 地址的宏 
  20          
  21          #define IR_NUM_1  69
  22          #define IR_NUM_2  70
  23          #define IR_NUM_3  71
  24          #define IR_NUM_4  68
  25          #define IR_NUM_5  64
  26          #define IR_NUM_6  67
  27          #define IR_NUM_7  7
  28          #define IR_NUM_8  21
  29          #define IR_NUM_9  8
  30          #define IR_CMD_STAR 22
  31          #define IR_NUM_0  25
  32          #define IR_CMD_SHARP  13
  33          #define IR_CMD_UP 24
  34          #define IR_CMD_DOWN 82
  35          #define IR_CMD_LEFT 8
  36          #define IR_CMD_RIGHT  90
  37          #define IR_CMD_OK 28
  38          
  39          #define IR_CMDRECV IRCOM[2]
  40          
  41          
  42          typedef struct __SYSTEMTIME__
  43          {
  44            unsigned char Second;
  45            unsigned char Minute;
  46            unsigned char Hour;
  47            unsigned char Week;
  48            unsigned char Day;
  49            unsigned char Month;
  50            unsigned char Year;
  51            unsigned char DateString[13];
  52            unsigned char TimeString[9];
  53          }SystemTime;
  54          
  55          typedef struct __CLIMATE__
C51 COMPILER V9.54   12864A_3                                                              04/22/2017 09:50:01 PAGE 2   

  56          {
  57            int Temp;
  58            int Humidity;
  59            unsigned char TempString[4];
  60            unsigned char HumidityString[5];
  61          }SystemClimate;
  62          
  63          sbit LCD_RS  =  P3^5;            //寄存器选择输入 
  64          sbit LCD_RW  =  P3^6;            //液晶读/写控制
  65          sbit LCD_EN  =  P3^4;            //液晶使能控制
  66          sbit LCD_PSB =  P3^1;            //串/并方式控制
  67          
  68          sbit  DS1302_CLK = P2^5;              //实时时钟时钟线引脚 
  69          sbit  DS1302_IO  = P2^4;              //实时时钟数据线引脚 
  70          sbit  DS1302_RST = P2^3;              //实时时钟复位线引脚  
  71          
  72          sbit BUZZER=P2^0;
  73          
  74          sbit Data=P1^0;
  75          sbit IRIN = P3^3;         //红外接收器数据线
  76          
  77          uchar GRAM[17];
  78          
  79          uchar IRCOM[4];
  80          
  81          sbit  ACC0 = ACC^0;
  82          sbit  ACC7 = ACC^7;
  83          
  84          unsigned int SysTick=0;
  85          
  86          void TIM0_Handler() interrupt 1
  87          {
  88   1        SysTick++;
  89   1      }
  90          
  91          void ir_wait(unsigned char x)    //x*0.14MS
  92          {
  93   1       unsigned char i;
  94   1        while(x--)
  95   1       {
  96   2        for (i = 0; i<13; i++) {}
  97   2       }
  98   1      }
  99          
 100          void ir_wait1(int ms)
 101          {
 102   1       unsigned char y;
 103   1        while(ms--)
 104   1       {
 105   2        for(y = 0; y<250; y++)
 106   2        {
 107   3         _nop_();
 108   3         _nop_();
 109   3         _nop_();
 110   3         _nop_();
 111   3        }
 112   2       }
 113   1      }
 114          void DHT11_delay_us(uchar n)
 115          {
 116   1          while(--n);
 117   1      }
C51 COMPILER V9.54   12864A_3                                                              04/22/2017 09:50:01 PAGE 3   

 118          
 119          void DHT11_delay_ms(uint z)
 120          {
 121   1         uint i,j;
 122   1         for(i=z;i>0;i--)
 123   1            for(j=110;j>0;j--);
 124   1      }
 125          
 126          void delay0(uchar x)    //x*0.14MS
 127          {
 128   1        uchar i;
 129   1        while(x--)
 130   1       {
 131   2        for (i = 0; i<13; i++) {}
 132   2       }
 133   1      }
 134          
 135          void delay(int ms)
 136          {
 137   1          while(ms--)
 138   1        {
 139   2            uchar i;
 140   2          for(i=0;i<110;i++)  
 141   2           {
 142   3              _nop_();         
 143   3              _nop_();
 144   3           }
 145   2        }
 146   1      }   
 147          
 148          void Beep()
 149          {
 150   1        int length;
 151   1        for(length = 0;length < 100;length++){
 152   2          BUZZER = 0;
 153   2          DHT11_delay_us(150);
 154   2          BUZZER = 1;
 155   2          DHT11_delay_us(150);
 156   2        }
 157   1      }
 158          
 159          void BeepAlarm()
 160          {
 161   1        int length;
 162   1        for(length = 0;length < 200;length++){
 163   2          BUZZER = 0;
 164   2          DHT11_delay_us(100);
 165   2          BUZZER = 1;
 166   2          DHT11_delay_us(100);
 167   2        }
 168   1      }
 169          
 170          bit LCD_GetStatus()
 171          {                          
 172   1          bit result;
 173   1          LCD_RS = 0;
 174   1          LCD_RW = 1;
 175   1          LCD_EN = 1;
 176   1          delayNOP();
 177   1          result = (bit)(P0&0x80);
 178   1          LCD_EN = 0;
 179   1          return(result); 
C51 COMPILER V9.54   12864A_3                                                              04/22/2017 09:50:01 PAGE 4   

 180   1      }
 181          
 182          void LCD_WCmd(uchar cmd)
 183          {                          
 184   1         while(LCD_GetStatus());
 185   1          LCD_RS = 0;
 186   1          LCD_RW = 0;
 187   1          LCD_EN = 0;
 188   1          _nop_();
 189   1          _nop_(); 
 190   1          P0 = cmd;
 191   1          delayNOP();
 192   1          LCD_EN = 1;
 193   1          delayNOP();
 194   1          LCD_EN = 0;  
 195   1      }
 196          
 197          void LCD_SetPos(uchar X,uchar Y)
 198          {                          
 199   1         uchar  pos;
 200   1         if (X==0)
 201   1           {X=0x80;}
 202   1         else if (X==1)
 203   1           {X=0x90;}
 204   1         else if (X==2)
 205   1           {X=0x88;}
 206   1         else if (X==3)
 207   1           {X=0x98;}
 208   1         pos = X+Y ;  
 209   1         LCD_WCmd(pos);     //显示地址
 210   1      }
 211          
 212          
 213          void LCD_WDat(uchar dat)
 214          {                          
 215   1         while(LCD_GetStatus());
 216   1          LCD_RS = 1;
 217   1          LCD_RW = 0;
 218   1          LCD_EN = 0;
 219   1          P0 = dat;
 220   1          delayNOP();
 221   1          LCD_EN = 1;
 222   1          delayNOP();
 223   1          LCD_EN = 0; 
 224   1      }
 225          
 226          void LCD_Init()
 227          { 
 228   1      
 229   1          LCD_PSB = 1;         //并口方式  
 230   1          LCD_WCmd(0x34);      //扩充指令操作
 231   1          delay(5);
 232   1          LCD_WCmd(0x30);      //基本指令操作
 233   1          delay(5);
 234   1          LCD_WCmd(0x0C);      //显示开，关光标
 235   1          delay(5);
 236   1          LCD_WCmd(0x01);      //清除LCD的显示内容
 237   1          delay(5);
 238   1      }
 239          
 240          void DHT11_start()
 241          {
C51 COMPILER V9.54   12864A_3                                                              04/22/2017 09:50:01 PAGE 5   

 242   1         Data=1;
 243   1         DHT11_delay_us(2);
 244   1         Data=0;
 245   1         DHT11_delay_ms(20);
 246   1         Data=1;
 247   1         DHT11_delay_us(30);
 248   1      }
 249          
 250          uchar DHT11_rec_byte() 
 251          {
 252   1         uchar i,dat=0;
 253   1        for(i=0;i<8;i++) 
 254   1         {          
 255   2            while(!Data); 
 256   2            DHT11_delay_us(8); 
 257   2            dat<<=1;   
 258   2            if(Data==1)  
 259   2               dat+=1;
 260   2            while(Data);   
 261   2          }  
 262   1          return dat;
 263   1      }
 264          
 265          void DHT11_receive(SystemClimate *Climate) 
 266          {
 267   1          uchar R_H,R_L,T_H,T_L,RH,RL,TH,TL,revise; 
 268   1          DHT11_start();
 269   1          if(Data==0)
 270   1          {
 271   2              while(Data==0);
 272   2              DHT11_delay_us(40); 
 273   2              R_H=DHT11_rec_byte(); 
 274   2              R_L=DHT11_rec_byte();
 275   2              T_H=DHT11_rec_byte();  
 276   2              T_L=DHT11_rec_byte(); 
 277   2              revise=DHT11_rec_byte(); 
 278   2      
 279   2              DHT11_delay_us(25); 
 280   2      
 281   2              if((R_H+R_L+T_H+T_L)==revise) 
 282   2              {
 283   3                  RH=R_H;
 284   3                  RL=R_L;
 285   3                  TH=T_H;
 286   3                  TL=T_L;
 287   3              }
 288   2              Climate->Humidity=RH;
 289   2              Climate->Temp=TH;
 290   2              if(Climate->Temp >= 0)
 291   2              {
 292   3                Climate->TempString[0]='0'+(TH/10);
 293   3                Climate->TempString[1]='0'+(TH%10);
 294   3                Climate->TempString[2]='C';
 295   3                Climate->TempString[3]='\0';
 296   3              }
 297   2              else
 298   2              {
 299   3                Climate->TempString[1]='0'+(TH/10);
 300   3                Climate->TempString[2]='0'+(TH%10);
 301   3                Climate->TempString[0]='-';
 302   3                Climate->TempString[3]='\0';
 303   3              }
C51 COMPILER V9.54   12864A_3                                                              04/22/2017 09:50:01 PAGE 6   

 304   2              if(Climate->Humidity==100)Climate->Humidity=99;
 305   2                Climate->HumidityString[0]='0'+(RH/10);
 306   2                Climate->HumidityString[1]='0'+(RH%10);
 307   2                Climate->HumidityString[2]='R';
 308   2                Climate->HumidityString[3]='H';
 309   2                Climate->HumidityString[4]='\0';
 310   2          }
 311   1      }
 312          
 313          void DS1302InputByte(unsigned char d)   //实时时钟写入一字节(内部函数)
 314          { 
 315   1          unsigned char i;
 316   1          ACC = d;
 317   1          for(i=8; i>0; i--)
 318   1          {
 319   2              DS1302_IO = ACC0;             //相当于汇编中的 RRC
 320   2              DS1302_CLK = 1;
 321   2              DS1302_CLK = 0;
 322   2              ACC = ACC >> 1; 
 323   2          } 
 324   1      }
 325          
 326          unsigned char DS1302OutputByte(void)  //实时时钟读取一字节(内部函数)
 327          { 
 328   1          unsigned char i;
 329   1          for(i=8; i>0; i--)
 330   1          {
 331   2              ACC = ACC >>1;              //相当于汇编中的 RRC 
 332   2              ACC7 = DS1302_IO;
 333   2              DS1302_CLK = 1;
 334   2              DS1302_CLK = 0;
 335   2          } 
 336   1          return(ACC); 
 337   1      }
 338          
 339          void Write1302(unsigned char ucAddr, unsigned char ucDa)  //ucAddr: DS1302地址, ucData: 要写的数据
 340          {
 341   1          DS1302_RST = 0;
 342   1          DS1302_CLK = 0;
 343   1          DS1302_RST = 1;
 344   1          DS1302InputByte(ucAddr);        // 地址，命令 
 345   1          DS1302InputByte(ucDa);        // 写1Byte数据
 346   1      //    DS1302_CLK = 1;
 347   1          DS1302_RST = 0;
 348   1      } 
 349          
 350          unsigned char Read1302(unsigned char ucAddr)  //读取DS1302某地址的数据
 351          {
 352   1          unsigned char ucData;
 353   1          DS1302_RST = 0;
 354   1          DS1302_CLK = 0;
 355   1          DS1302_RST = 1;
 356   1          DS1302InputByte(ucAddr|0x01);        // 地址，命令 
 357   1          ucData = DS1302OutputByte();         // 读1Byte数据
 358   1      //    DS1302_CLK = 1;
 359   1          DS1302_RST = 0;
 360   1          return(ucData);
 361   1      }
 362          
 363          void DS1302_SetProtect(bit flag)        //是否写保护
 364          {
 365   1        if(flag)
C51 COMPILER V9.54   12864A_3                                                              04/22/2017 09:50:01 PAGE 7   

 366   1          Write1302(0x8E,0x10);
 367   1        else
 368   1          Write1302(0x8E,0x00);
 369   1      }
 370          
 371          void DS1302_SetTime(unsigned char Address, unsigned char Value)        // 设置时间函数
 372          {
 373   1        DS1302_SetProtect(0);
 374   1        Write1302(Address, ((Value/10)<<4 | (Value%10))); 
 375   1      }
 376          
 377          void DS1302_GetTime(SystemTime *Time)
 378          {
 379   1        unsigned char ReadValue;
 380   1        ReadValue = Read1302(DS1302_SECOND);
 381   1        Time->Second = ((ReadValue&0x70)>>4)*10 + (ReadValue&0x0F); //八进制转换成十进制
 382   1        ReadValue = Read1302(DS1302_MINUTE);
 383   1        Time->Minute = ((ReadValue&0x70)>>4)*10 + (ReadValue&0x0F);
 384   1        ReadValue = Read1302(DS1302_HOUR);
 385   1        Time->Hour = ((ReadValue&0x70)>>4)*10 + (ReadValue&0x0F);
 386   1        ReadValue = Read1302(DS1302_DAY);
 387   1        Time->Day = ((ReadValue&0x70)>>4)*10 + (ReadValue&0x0F);  
 388   1        ReadValue = Read1302(DS1302_WEEK);
 389   1        Time->Week = ((ReadValue&0x70)>>4)*10 + (ReadValue&0x0F);
 390   1        ReadValue = Read1302(DS1302_MONTH);
 391   1        Time->Month = ((ReadValue&0x70)>>4)*10 + (ReadValue&0x0F);
 392   1        ReadValue = Read1302(DS1302_YEAR);
 393   1        Time->Year = ((ReadValue&0x70)>>4)*10 + (ReadValue&0x0F); 
 394   1      }
 395          
 396          void DateToStr(SystemTime *Time)   //
 397          {
 398   1        Time->DateString[0] = Time->Year/10+0x30 ;   //分离出个位和十位
 399   1        Time->DateString[1] = Time->Year%10+0x30 ;
 400   1        Time->DateString[2] = 0xC4;
 401   1        Time->DateString[3] = 0xEA;
 402   1        Time->DateString[4] = Time->Month/10+0x30;
 403   1        Time->DateString[5] = Time->Month%10+0x30;
 404   1        Time->DateString[6] = 0xD4;
 405   1        Time->DateString[7] = 0xC2;
 406   1        Time->DateString[8] = Time->Day/10+0x30;
 407   1        Time->DateString[9] = Time->Day%10+0x30;
 408   1        Time->DateString[10] = 0xC8;
 409   1        Time->DateString[11] = 0xD5;
 410   1        Time->DateString[12] = '\0';
 411   1      }
 412          
 413          void TimeToStr(SystemTime *Time)
 414          {
 415   1        Time->TimeString[0] = Time->Hour/10+0x30;
 416   1        Time->TimeString[1] = Time->Hour%10+0x30;
 417   1        Time->TimeString[2] = ':';
 418   1        Time->TimeString[3] = Time->Minute/10+0x30;
 419   1        Time->TimeString[4] = Time->Minute%10+0x30;
 420   1        Time->TimeString[5] = ':';
 421   1        Time->TimeString[6] = Time->Second/10+0x30;
 422   1        Time->TimeString[7] = Time->Second%10+0x30;
 423   1        Time->TimeString[8] = '\0';
 424   1      }
 425          
 426          void Initial_DS1302(void)
 427          {
C51 COMPILER V9.54   12864A_3                                                              04/22/2017 09:50:01 PAGE 8   

 428   1        unsigned char Second=Read1302(DS1302_SECOND);
 429   1        if(Second&0x80)     
 430   1          DS1302_SetTime(DS1302_SECOND,0);
 431   1      }
 432          
 433          
 434          
 435          void LCD_WriteAt(unsigned char x,unsigned char y)
 436          {
 437   1          uchar i;    
 438   1          LCD_SetPos(x,y);             //设置显示位置为第一行的第1个字符
 439   1           i = 0;
 440   1          while(GRAM[i] != '\0')
 441   1           {                         //显示字符
 442   2             LCD_WDat(GRAM[i]);
 443   2             i++;
 444   2           }
 445   1      }
 446          
 447          void LCD_Clear()
 448          {
 449   1        strcpy(GRAM,"                ");
 450   1        LCD_WriteAt(0,0);
 451   1        LCD_WriteAt(1,0);
 452   1        LCD_WriteAt(2,0);
 453   1        LCD_WriteAt(3,0);
 454   1      }
 455          
 456          void IR_IN() interrupt 2 using 0
 457          {
 458   1        unsigned char j,k,N=0;
 459   1           EX1 = 0;   
 460   1         ir_wait(15);
 461   1         if (IRIN==1) 
 462   1           { EX1 =1;
 463   2           return;
 464   2          } 
 465   1                                 //确认IR信号出现
 466   1        while (!IRIN)            //等IR变为高电平，跳过9ms的前导低电平信号。
 467   1          {ir_wait(1);}
 468   1      
 469   1       for (j=0;j<4;j++)         //收集四组数据
 470   1       { 
 471   2        for (k=0;k<8;k++)        //每组数据有8位
 472   2        {
 473   3         while (IRIN)            //等 IR 变为低电平，跳过4.5ms的前导高电平信号。
 474   3           {ir_wait(1);}
 475   3          while (!IRIN)          //等 IR 变为高电平
 476   3           {ir_wait(1);}
 477   3           while (IRIN)           //计算IR高电平时长
 478   3            {
 479   4          ir_wait(1);
 480   4          N++;           
 481   4          if (N>=30)
 482   4         { EX1=1;
 483   5         return;}                  //0.14ms计数过长自动离开。
 484   4            }                        //高电平计数完毕                
 485   3           IRCOM[j]=IRCOM[j] >> 1;                  //数据最高位补“0”
 486   3           if (N>=8) {IRCOM[j] = IRCOM[j] | 0x80;}  //数据最高位补“1”
 487   3           N=0;
 488   3        }//end for k
 489   2       }//end for j
C51 COMPILER V9.54   12864A_3                                                              04/22/2017 09:50:01 PAGE 9   

 490   1         
 491   1         if (IRCOM[2]!=~IRCOM[3])
 492   1         { EX1=1;
 493   2           goto LOOP; }
 494   1      
 495   1      //  GRAM[0]=IRCOM[2]/100+0x30;
 496   1      //  GRAM[1]=IRCOM[2]%100/10+0x30;
 497   1      //  GRAM[2]=IRCOM[2]%10+0x30;
 498   1      //  GRAM[3]="\0";
 499   1      //  LCD_WriteAt(3,6);
 500   1           
 501   1        Beep();
 502   1        EX1 = 1;
 503   1        LOOP:; 
 504   1      } 
 505          
 506          void GUI_Index()
 507          {
 508   1        unsigned char ptr;
 509   1        SystemTime CurrentTime;
 510   1        SystemClimate CurrentClimate;
 511   1        if(SysTick >= 5)
 512   1        {
 513   2          DS1302_GetTime(&CurrentTime);
 514   2          DateToStr(&CurrentTime);
 515   2          TimeToStr(&CurrentTime);
 516   2          DHT11_receive(&CurrentClimate);
 517   2        for(ptr=0;ptr<=8;ptr++)
 518   2          GRAM[ptr] = CurrentTime.TimeString[ptr];
 519   2        LCD_WriteAt(0,0);
 520   2        strcpy(GRAM,"闹钟??");
 521   2        LCD_WriteAt(0,5);
 522   2        strcpy(GRAM,"公元");
 523   2        LCD_WriteAt(1,0);
 524   2        for(ptr=0;ptr<=12;ptr++)
 525   2          GRAM[ptr] = CurrentTime.DateString[ptr];
 526   2        LCD_WriteAt(1,2);
 527   2        strcpy(GRAM,"温度    湿度");
 528   2        LCD_WriteAt(2,0);   
 529   2        for(ptr=0;ptr<=3;ptr++)
 530   2          GRAM[ptr] = CurrentClimate.TempString[ptr];
 531   2        LCD_WriteAt(2,2);
 532   2        for(ptr=0;ptr<=4;ptr++)
 533   2          GRAM[ptr] = CurrentClimate.HumidityString[ptr];
 534   2        LCD_WriteAt(2,6);
 535   2        SysTick = 0;
 536   2        }
 537   1      }
 538          
 539          void GUI_MainMenu()
 540          {
 541   1        LCD_Clear();
 542   1        strcpy(GRAM,"1.本地时间设置");
 543   1        LCD_WriteAt(0,0);
 544   1        strcpy(GRAM,"2.闹钟设置");
 545   1        LCD_WriteAt(1,0);
 546   1        strcpy(GRAM,"3.温度阈值设置");
 547   1        LCD_WriteAt(2,0);
 548   1        strcpy(GRAM,"4.其他选项");
 549   1        LCD_WriteAt(3,0);
 550   1        while(1);
 551   1      }
C51 COMPILER V9.54   12864A_3                                                              04/22/2017 09:50:01 PAGE 10  

 552          
 553          void main()
 554          { 
 555   1        IE = 0x84;                 //允许总中断中断,使能 INT1 外部中断
 556   1        TCON = 0x10;               //触发方式为脉冲负边沿触发  
 557   1        IRIN=1;                    //I/O口初始化
 558   1      
 559   1        TMOD=0x01;
 560   1        TH0=(65536-46080)/256;// 由于晶振为11.0592,故所记次数应为46080，计时器每隔50000微秒发起一次中断。
 561   1        TL0=(65536-46080)%256;//46080的来历，为50000*11.0592/12
 562   1        ET0=1;
 563   1        EA=1;
 564   1        
 565   1        LCD_Init();                //初始化LCD  
 566   1        Initial_DS1302();
 567   1        strcpy(GRAM,"按[OK]键打开菜单");
 568   1        LCD_WriteAt(1,0);
 569   1        delay(500);
 570   1        LCD_Clear();
 571   1        Beep();
 572   1        BeepAlarm();
 573   1        while(1)
 574   1        {
 575   2          GUI_Index();
 576   2          if(IR_CMDRECV == IR_CMD_OK)
 577   2          {
 578   3            GUI_MainMenu();
 579   3          }
 580   2        }
 581   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1827    ----
   CONSTANT SIZE    =    111    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23      54
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
